#!/bin/sh

# DO NOT make any manual changes to this file.
# This file is maintained by CHEF.
# Actions supported: start, stop and restart

#START_SCRIPT="thin start -C <%= @thin_config %>"
#STOP_SCRIPT="thin stop -C <%= @thin_config %>"
PIDFILE=<%= @pid_file %>

RETURN_VALUE=0

start() {
  [ -f "$PIDFILE" ] && _status && return
  export BUNDLE_GEMFILE="<%= @app_dir %>/Gemfile"
  export PATH="<%= @ruby_bin %>:$PATH"

  thin start -C <%= @thin_config %>

  if check_pid; then
    RETURN_VALUE=0
    echo "Server has started"
  else
    RETURN_VALUE=1
    echo "Bork..bork..bork...unable to start the server!"
  fi
}

check_pid() {
  # wait for pidfile
  sleep 2
  [ -f "$PIDFILE" ]
}

stop() {
  if [ -f "$PIDFILE" ]; then
    echo -n $"Stopping thin server:"
    export BUNDLE_GEMFILE="<%= @app_dir %>/Gemfile"
    export PATH="<%= @ruby_bin %>:$PATH"
    thin stop -C <%= @thin_config %>
    if check_pid; then
      RETURN_VALUE=1
      echo "Unable to shut down the server!"
    else
      RETURN_VALUE=0
      echo "Successfully shut down!"
    fi
  else
    _status
    RETURN_VALUE=0
  fi
}

_status() {
  if check_pid; then
    PID=`cat $PIDFILE`
    if  ps -p $PID >&- ; then
      echo "Thin server is up!"
    else
      echo "Thin server is not up!"
    fi
  else
    RETURN_VALUE=1
    echo "Thin server is not up!"
  fi
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  status)
    _status
    ;;
  restart)
    stop
    start
    ;;
  *)
    echo "Usage: $0 {start|stop|restart}"
    RETURN_VALUE=2
    ;;
esac

exit $RETURN_VALUE
